pacman_tests = [
  { 'name': 'tests/backup001.py' },
  { 'name': 'tests/clean001.py' },
  { 'name': 'tests/clean002.py' },
  { 'name': 'tests/clean003.py' },
  { 'name': 'tests/clean004.py' },
  { 'name': 'tests/clean005.py' },
  { 'name': 'tests/config001.py' },
  { 'name': 'tests/config002.py' },
  { 'name': 'tests/database001.py' },
  { 'name': 'tests/database002.py' },
  { 'name': 'tests/database010.py' },
  { 'name': 'tests/database011.py' },
  { 'name': 'tests/database012.py' },
  { 'name': 'tests/dbonly-extracted-files.py' },
  { 'name': 'tests/depconflict100.py' },
  { 'name': 'tests/depconflict110.py' },
  { 'name': 'tests/depconflict111.py' },
  { 'name': 'tests/depconflict120.py' },
  { 'name': 'tests/dependency-cycle-fixed-by-upgrade.py' },
  { 'name': 'tests/deprange001.py',
    'should_fail': true },
  { 'name': 'tests/deptest001.py' },
  { 'name': 'tests/dummy001.py' },
  { 'name': 'tests/epoch001.py' },
  { 'name': 'tests/epoch002.py' },
  { 'name': 'tests/epoch003.py' },
  { 'name': 'tests/epoch004.py' },
  { 'name': 'tests/epoch005.py' },
  { 'name': 'tests/epoch010.py' },
  { 'name': 'tests/epoch011.py' },
  { 'name': 'tests/epoch012.py' },
  { 'name': 'tests/file-conflict-with-installed-pkg.py' },
  { 'name': 'tests/fileconflict001.py' },
  { 'name': 'tests/fileconflict002.py' },
  { 'name': 'tests/fileconflict003.py' },
  { 'name': 'tests/fileconflict004.py' },
  { 'name': 'tests/fileconflict005.py' },
  { 'name': 'tests/fileconflict006.py' },
  { 'name': 'tests/fileconflict007.py' },
  { 'name': 'tests/fileconflict008.py' },
  { 'name': 'tests/fileconflict009.py' },
  { 'name': 'tests/fileconflict010.py' },
  { 'name': 'tests/fileconflict011.py' },
  { 'name': 'tests/fileconflict012.py' },
  { 'name': 'tests/fileconflict013.py' },
  { 'name': 'tests/fileconflict015.py' },
  { 'name': 'tests/fileconflict016.py' },
  { 'name': 'tests/fileconflict017.py' },
  { 'name': 'tests/fileconflict020.py' },
  { 'name': 'tests/fileconflict021.py' },
  { 'name': 'tests/fileconflict022.py' },
  { 'name': 'tests/fileconflict023.py' },
  { 'name': 'tests/fileconflict024.py' },
  { 'name': 'tests/fileconflict025.py' },
  { 'name': 'tests/fileconflict030.py' },
  { 'name': 'tests/fileconflict031.py' },
  { 'name': 'tests/fileconflict032.py' },
  { 'name': 'tests/hook-abortonfail.py' },
  { 'name': 'tests/hook-description-reused.py' },
  { 'name': 'tests/hook-exec-reused.py' },
  { 'name': 'tests/hook-exec-with-arguments.py' },
  { 'name': 'tests/hook-file-change-packages.py' },
  { 'name': 'tests/hook-file-remove-trigger-match.py' },
  { 'name': 'tests/hook-file-upgrade-nomatch.py' },
  { 'name': 'tests/hook-invalid-trigger.py' },
  { 'name': 'tests/hook-pkg-install-trigger-match.py' },
  { 'name': 'tests/hook-pkg-postinstall-trigger-match.py' },
  { 'name': 'tests/hook-pkg-remove-trigger-match.py' },
  { 'name': 'tests/hook-pkg-upgrade-trigger-match.py' },
  { 'name': 'tests/hook-target-list.py' },
  { 'name': 'tests/hook-type-reused.py' },
  { 'name': 'tests/hook-upgrade-trigger-no-match.py' },
  { 'name': 'tests/hook-when-reused.py' },
  { 'name': 'tests/ignore001.py' },
  { 'name': 'tests/ignore002.py' },
  { 'name': 'tests/ignore003.py' },
  { 'name': 'tests/ignore004.py' },
  { 'name': 'tests/ignore005.py' },
  { 'name': 'tests/ignore006.py' },
  { 'name': 'tests/ignore007.py' },
  { 'name': 'tests/ignore008.py' },
  { 'name': 'tests/ldconfig001.py' },
  { 'name': 'tests/ldconfig002.py' },
  { 'name': 'tests/ldconfig003.py' },
  { 'name': 'tests/mode001.py' },
  { 'name': 'tests/mode002.py' },
  { 'name': 'tests/mode003.py' },
  { 'name': 'tests/noupgrade-inverted.py' },
  { 'name': 'tests/overwrite-files-match-negated.py' },
  { 'name': 'tests/overwrite-files-match.py' },
  { 'name': 'tests/overwrite-files-nonmatch.py' },
  { 'name': 'tests/pacman001.py' },
  { 'name': 'tests/pacman002.py' },
  { 'name': 'tests/pacman003.py' },
  { 'name': 'tests/pacman004.py' },
  { 'name': 'tests/pacman005.py' },
  { 'name': 'tests/provision001.py' },
  { 'name': 'tests/provision002.py' },
  { 'name': 'tests/provision003.py' },
  { 'name': 'tests/provision004.py' },
  { 'name': 'tests/provision010.py' },
  { 'name': 'tests/provision011.py' },
  { 'name': 'tests/provision012.py' },
  { 'name': 'tests/provision020.py' },
  { 'name': 'tests/provision021.py' },
  { 'name': 'tests/provision022.py' },
  { 'name': 'tests/query001.py' },
  { 'name': 'tests/query002.py' },
  { 'name': 'tests/query003.py' },
  { 'name': 'tests/query004.py' },
  { 'name': 'tests/query005.py' },
  { 'name': 'tests/query006.py',
    # expect failure on 32 bit machines
    'should_fail': cc.sizeof('ssize_t') < 8 },
  { 'name': 'tests/query007.py' },
  { 'name': 'tests/query010.py' },
  { 'name': 'tests/query011.py' },
  { 'name': 'tests/query012.py' },
  { 'name': 'tests/querycheck001.py' },
  { 'name': 'tests/querycheck002.py' },
  { 'name': 'tests/querycheck_fast_file_type.py' },
  { 'name': 'tests/reason001.py' },
  { 'name': 'tests/remove-assumeinstalled.py' },
  { 'name': 'tests/remove-directory-replaced-with-symlink.py' },
  { 'name': 'tests/remove-optdepend-of-installed-package.py' },
  { 'name': 'tests/remove-recursive-cycle.py' },
  { 'name': 'tests/remove001.py' },
  { 'name': 'tests/remove002.py' },
  { 'name': 'tests/remove010.py' },
  { 'name': 'tests/remove011.py' },
  { 'name': 'tests/remove012.py' },
  { 'name': 'tests/remove020.py' },
  { 'name': 'tests/remove021.py' },
  { 'name': 'tests/remove030.py' },
  { 'name': 'tests/remove031.py' },
  { 'name': 'tests/remove040.py' },
  { 'name': 'tests/remove041.py' },
  { 'name': 'tests/remove042.py' },
  { 'name': 'tests/remove043.py' },
  { 'name': 'tests/remove044.py' },
  { 'name': 'tests/remove045.py' },
  { 'name': 'tests/remove047.py' },
  { 'name': 'tests/remove049.py' },
  { 'name': 'tests/remove050.py' },
  { 'name': 'tests/remove051.py' },
  { 'name': 'tests/remove052.py' },
  { 'name': 'tests/remove060.py' },
  { 'name': 'tests/remove070.py' },
  { 'name': 'tests/remove071.py' },
  { 'name': 'tests/replace-and-upgrade-package.py' },
  { 'name': 'tests/replace100.py' },
  { 'name': 'tests/replace101.py' },
  { 'name': 'tests/replace102.py' },
  { 'name': 'tests/replace103.py' },
  { 'name': 'tests/replace104.py' },
  { 'name': 'tests/replace110.py',
    'should_fail': true },
  { 'name': 'tests/scriptlet001.py' },
  { 'name': 'tests/scriptlet002.py' },
  { 'name': 'tests/scriptlet-signal-handling.py' },
  { 'name': 'tests/scriptlet-signal-reset.py' },
  { 'name': 'tests/sign001.py' },
  { 'name': 'tests/sign002.py' },
  { 'name': 'tests/skip-remove-with-glob-chars.py' },
  { 'name': 'tests/smoke001.py' },
  { 'name': 'tests/smoke002.py' },
  { 'name': 'tests/smoke003.py' },
  { 'name': 'tests/smoke004.py' },
  { 'name': 'tests/symlink-replace-with-dir.py' },
  { 'name': 'tests/symlink001.py' },
  { 'name': 'tests/symlink002.py' },
  { 'name': 'tests/symlink010.py' },
  { 'name': 'tests/symlink011.py' },
  { 'name': 'tests/symlink012.py' },
  { 'name': 'tests/symlink020.py' },
  { 'name': 'tests/symlink021.py' },
  { 'name': 'tests/sync-install-assumeinstalled.py' },
  { 'name': 'tests/sync-nodepversion01.py' },
  { 'name': 'tests/sync-nodepversion02.py' },
  { 'name': 'tests/sync-nodepversion03.py' },
  { 'name': 'tests/sync-nodepversion04.py' },
  { 'name': 'tests/sync-nodepversion05.py' },
  { 'name': 'tests/sync-nodepversion06.py' },
  { 'name': 'tests/sync-sysupgrade-print-replaced-packages.py' },
  { 'name': 'tests/sync-update-assumeinstalled.py' },
  { 'name': 'tests/sync-update-package-removing-required-provides.py',
    'should_fail': true },
  { 'name': 'tests/sync001.py' },
  { 'name': 'tests/sync002.py' },
  { 'name': 'tests/sync003.py' },
  { 'name': 'tests/sync009.py' },
  { 'name': 'tests/sync010.py' },
  { 'name': 'tests/sync011.py' },
  { 'name': 'tests/sync012.py' },
  { 'name': 'tests/sync020.py' },
  { 'name': 'tests/sync021.py' },
  { 'name': 'tests/sync022.py' },
  { 'name': 'tests/sync023.py' },
  { 'name': 'tests/sync024.py' },
  { 'name': 'tests/sync030.py' },
  { 'name': 'tests/sync031.py' },
  { 'name': 'tests/sync040.py' },
  { 'name': 'tests/sync041.py' },
  { 'name': 'tests/sync042.py' },
  { 'name': 'tests/sync043.py' },
  { 'name': 'tests/sync044.py' },
  { 'name': 'tests/sync045.py' },
  { 'name': 'tests/sync046.py' },
  { 'name': 'tests/sync050.py' },
  { 'name': 'tests/sync051.py' },
  { 'name': 'tests/sync052.py' },
  { 'name': 'tests/sync100.py' },
  { 'name': 'tests/sync1000.py' },
  { 'name': 'tests/sync1003.py' },
  { 'name': 'tests/sync1004.py' },
  { 'name': 'tests/sync1008.py' },
  { 'name': 'tests/sync101.py' },
  { 'name': 'tests/sync102.py' },
  { 'name': 'tests/sync103.py' },
  { 'name': 'tests/sync104.py' },
  { 'name': 'tests/sync110.py' },
  { 'name': 'tests/sync1100.py' },
  { 'name': 'tests/sync1101.py' },
  { 'name': 'tests/sync1102.py' },
  { 'name': 'tests/sync1103.py' },
  { 'name': 'tests/sync1104.py' },
  { 'name': 'tests/sync1105.py' },
  { 'name': 'tests/sync120.py' },
  { 'name': 'tests/sync130.py' },
  { 'name': 'tests/sync131.py' },
  { 'name': 'tests/sync132.py' },
  { 'name': 'tests/sync133.py' },
  { 'name': 'tests/sync134.py' },
  { 'name': 'tests/sync135.py' },
  { 'name': 'tests/sync136.py' },
  { 'name': 'tests/sync137.py' },
  { 'name': 'tests/sync138.py' },
  { 'name': 'tests/sync139.py' },
  { 'name': 'tests/sync140.py' },
  { 'name': 'tests/sync141.py' },
  { 'name': 'tests/sync150.py' },
  { 'name': 'tests/sync200.py' },
  { 'name': 'tests/sync300.py' },
  { 'name': 'tests/sync306.py' },
  { 'name': 'tests/sync400.py' },
  { 'name': 'tests/sync401.py' },
  { 'name': 'tests/sync402.py' },
  { 'name': 'tests/sync403.py',
    'should_fail': true },
  { 'name': 'tests/sync404.py' },
  { 'name': 'tests/sync405.py' },
  { 'name': 'tests/sync406.py',
    'should_fail': true },
  { 'name': 'tests/sync407.py' },
  { 'name': 'tests/sync500.py' },
  { 'name': 'tests/sync501.py' },
  { 'name': 'tests/sync502.py' },
  { 'name': 'tests/sync503.py' },
  { 'name': 'tests/sync600.py' },
  { 'name': 'tests/sync700.py' },
  { 'name': 'tests/sync701.py' },
  { 'name': 'tests/sync702.py' },
  { 'name': 'tests/sync890.py' },
  { 'name': 'tests/sync891.py' },
  { 'name': 'tests/sync892.py' },
  { 'name': 'tests/sync893.py' },
  { 'name': 'tests/sync895.py' },
  { 'name': 'tests/sync896.py' },
  { 'name': 'tests/sync897.py' },
  { 'name': 'tests/sync898.py' },
  { 'name': 'tests/sync899.py' },
  { 'name': 'tests/sync900.py' },
  { 'name': 'tests/sync901.py' },
  { 'name': 'tests/sync990.py' },
  { 'name': 'tests/sync992.py' },
  { 'name': 'tests/sync993.py' },
  { 'name': 'tests/sync999.py' },
  { 'name': 'tests/trans001.py' },
  { 'name': 'tests/type001.py' },
  { 'name': 'tests/unresolvable001.py' },
  { 'name': 'tests/upgrade001.py' },
  { 'name': 'tests/upgrade002.py' },
  { 'name': 'tests/upgrade003.py' },
  { 'name': 'tests/upgrade004.py' },
  { 'name': 'tests/upgrade005.py' },
  { 'name': 'tests/upgrade006.py' },
  { 'name': 'tests/upgrade010.py' },
  { 'name': 'tests/upgrade011.py' },
  { 'name': 'tests/upgrade013.py' },
  { 'name': 'tests/upgrade020.py' },
  { 'name': 'tests/upgrade021.py' },
  { 'name': 'tests/upgrade022.py' },
  { 'name': 'tests/upgrade023.py' },
  { 'name': 'tests/upgrade024.py' },
  { 'name': 'tests/upgrade025.py' },
  { 'name': 'tests/upgrade026.py' },
  { 'name': 'tests/upgrade027.py' },
  { 'name': 'tests/upgrade028.py' },
  { 'name': 'tests/upgrade029.py' },
  { 'name': 'tests/upgrade030.py' },
  { 'name': 'tests/upgrade031.py' },
  { 'name': 'tests/upgrade032.py' },
  { 'name': 'tests/upgrade040.py' },
  { 'name': 'tests/upgrade041.py' },
  { 'name': 'tests/upgrade042.py' },
  { 'name': 'tests/upgrade043.py' },
  { 'name': 'tests/upgrade045.py' },
  { 'name': 'tests/upgrade050.py' },
  { 'name': 'tests/upgrade051.py' },
  { 'name': 'tests/upgrade052.py' },
  { 'name': 'tests/upgrade053.py' },
  { 'name': 'tests/upgrade054.py' },
  { 'name': 'tests/upgrade055.py' },
  { 'name': 'tests/upgrade056.py' },
  { 'name': 'tests/upgrade057.py' },
  { 'name': 'tests/upgrade058.py' },
  { 'name': 'tests/upgrade059.py' },
  { 'name': 'tests/upgrade060.py' },
  { 'name': 'tests/upgrade061.py' },
  { 'name': 'tests/upgrade070.py' },
  { 'name': 'tests/upgrade071.py' },
  { 'name': 'tests/upgrade072.py' },
  { 'name': 'tests/upgrade073.py' },
  { 'name': 'tests/upgrade074.py' },
  { 'name': 'tests/upgrade075.py' },
  { 'name': 'tests/upgrade076.py' },
  { 'name': 'tests/upgrade077.py' },
  { 'name': 'tests/upgrade078.py',
    'should_fail': true },
  { 'name': 'tests/upgrade080.py' },
  { 'name': 'tests/upgrade081.py' },
  { 'name': 'tests/upgrade082.py' },
  { 'name': 'tests/upgrade083.py' },
  { 'name': 'tests/upgrade084.py' },
  { 'name': 'tests/upgrade090.py' },
  { 'name': 'tests/upgrade100.py' },
  { 'name': 'tests/xfercommand001.py' },
]

foreach testobj : pacman_tests
  input = testobj.get('name')
  test_name = input.split('/')[1]
  should_fail = testobj.get('should_fail', false)
  args = [
    join_paths(meson.source_root(), 'build-aux/tap-driver.py'),
    join_paths(meson.current_source_dir(), 'pactest.py'),
    '--scriptlet-shell', get_option('scriptlet-shell'),
    '--bindir', meson.build_root(),
    '--ldconfig', LDCONFIG,
    '--verbose',
    join_paths(meson.current_source_dir(), input)
  ]
  if not conf.get('HAVE_LIBGPGME')
    args += '--without-gpg'
  endif

  test(
    test_name,
    PYTHON,
    args : args,
    depends : [pacman_bin],
    should_fail : should_fail)
endforeach
